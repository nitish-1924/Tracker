{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/countries-component/countries-component.component.ts","./src/app/components/countries-component/countries-component.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/data-service.service.ts","./src/app/components/dashbord-card/dashbord-card.component.ts","./src/app/components/dashbord-card/dashbord-card.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAS3C,MAAM,aAAa;IAqBxB,YAAoB,WAA8B;QAA9B,gBAAW,GAAX,WAAW,CAAmB;QApBlD,mBAAc,GAAC,CAAC,CAAC;QACjB,gBAAW,GAAC,CAAC,CAAC;QACd,eAAU,GAAC,CAAC,CAAC;QACb,mBAAc,GAAC,CAAC,CAAC;QAEjB,cAAS,GAAC,EAAE;QACZ,UAAK,GAAC;YACN,QAAQ,EAAC,UAAU;YACnB,WAAW,EAAC,aAAa;YACzB,MAAM,EAAC,GAAG;YACV,OAAO,EAAC;gBACN,SAAS,EAAC;oBACR,QAAQ,EAAC,IAAI;oBACb,MAAM,EAAC,KAAK;iBACb;aACF;SAEA;IAGqD,CAAC;IAEvD,SAAS,CAAC,QAAe;QAEvB,IAAI,CAAC,SAAS,GAAC,EAAE;QAClB,2CAA2C;QAE1C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,EAAC,IAAI,EAAC,EAAE;YACrC,IAAI,KAAY,CAAC;YACjB,IAAG,QAAQ,IAAE,GAAG;gBAChB,IAAG,MAAM,CAAC,MAAM,GAAC,IAAI,EACrB;oBACE,KAAK,GAAC,MAAM,CAAC,MAAM;iBACpB;YACD,IAAG,QAAQ,IAAE,GAAG;gBAChB,IAAG,MAAM,CAAC,SAAS,GAAC,IAAI,EACxB;oBACC,2BAA2B;oBAC1B,KAAK,GAAC,MAAM,CAAC,SAAS;iBACvB;YACD,IAAG,QAAQ,IAAE,GAAG;gBAChB,4BAA4B;gBAC5B,IAAI;gBACH,2BAA2B;gBAC1B,KAAK,GAAC,MAAM,CAAC,SAAS;YACxB,IAAI;YACJ,IAAG,QAAQ,IAAE,GAAG;gBAChB,IAAG,MAAM,CAAC,KAAK,GAAC,IAAI,EACpB;oBACE,KAAK,GAAC,MAAM,CAAC,KAAK;iBACnB;YAED,oBAAoB;YACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC;IAMJ,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CACxC;YACE,IAAI,EAAC,CAAC,MAAM,EAAC,EAAE;gBAEb,IAAI,CAAC,UAAU,GAAC,MAAM;gBAEvB,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAC,IAAI,EAAC,EAAE;oBAE7B,IAAI,CAAC,IAAI,GAAC,MAAM,CAAC;oBACjB,IAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC;wBACnC,IAAI,CAAC,WAAW,IAAE,IAAI,CAAC,IAAI,CAAC,MAAM;wBAClC,IAAI,CAAC,UAAU,IAAE,IAAI,CAAC,IAAI,CAAC,KAAK;wBAChC,IAAI,CAAC,cAAc,IAAE,IAAI,CAAC,IAAI,CAAC,SAAS;wBACxC,IAAI,CAAC,cAAc,IAAE,IAAI,CAAC,IAAI,CAAC,SAAS;qBACvC;gBACF,CAAC,CAAC;gBACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAItB,CAAC;SACF,CACF;IAGH,CAAC;IAED,WAAW,CAAC,QAAe;QAC1B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAE1B,CAAC;;0EAhGU,aAAa;6FAAb,aAAa;;QCT1B,yEACI;QAAA,wEAAsB;QAAA,kFAAuB;QAAA,4DAAK;QAElD,kFAKqB;QACzB,4DAAM;QACN,gEACA;QAAA,yEACI;QAAA,yEACE;QAAA,2EAAmB;QAAA,4EAAiB;QAAA,4DAAQ;QAC5C,yEACE;QAAA,0EACE;QAAA,+EACA;QADwC,kRAAS,0BAAoB,IAAC;QAAtE,4DACA;QAAA,6EAAe;QAAA,qEAAS;QAAA,4DAAQ;QAClC,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,iFACA;QADyC,kRAAS,0BAAoB,IAAC;QAAvE,4DACA;QAAA,6EAAe;QAAA,kEAAM;QAAA,4DAAQ;QAC/B,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,iFACA;QADwC,kRAAS,0BAAoB,IAAC;QAAtE,4DACA;QAAA,6EAAe;QAAA,qEAAS;QAAA,4DAAQ;QAClC,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,iFACA;QADwC,kRAAS,0BAAoB,IAAC;QAAtE,4DACA;QAAA,6EAAe;QAAA,kEAAM;QAAA,4DAAQ;QAC/B,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEV,2EACI;QAAA,2EACI;QAAA,+EAA2E;QAC3E,4DAAM;QACd,2EAEI;QAAA,+EAAwE;QAC5E,4DAAM;QAEN,4DAAM;QAtCN,4DACI;;QATmB,0DAAiC;QAAjC,8FAAiC;QAuClC,2DAA0B;QAA1B,uFAA0B;QAI9B,0DAAuB;QAAvB,oFAAuB;;6FDrC5B,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICQ7C,4EAAsD;IAAA,uDAAO;IAAA,4DAAS;;;IAA9D,oFAAe;IAA+B,0DAAO;IAAP,uEAAO;;ADE3D,MAAM,2BAA2B;IAEtC,YAAoB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAChD,cAAS,GAAU,EAAE,CAAC;QAEtB,mBAAc,GAAC,CAAC,CAAC;QACjB,gBAAW,GAAC,CAAC,CAAC;QACd,eAAU,GAAC,CAAC,CAAC;QACb,mBAAc,GAAC,CAAC,CAAC;IANmC,CAAC;IASnD,QAAQ;QAEP,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,SAAS,CACvC,MAAM,GAAE;YACN,uBAAuB;QAEzB,CAAC,CAED;QAGA,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,CAEpC,MAAM,GAAE;YAEP,IAAI,CAAC,IAAI,GAAC,MAAM,CAAC;YAChB,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAC,IAAI,EAAC,EAAE;gBAE5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC1B,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;gBAC3D,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;gBACrD,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;gBACnD,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;YAG7D,CAAC,CAAC;QACJ,CAAC,CAMF;QACF,+BAA+B;IAChC,CAAC;IAED,YAAY,CAAC,OAAc;QACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAC,GAAG,EAAC,EAAE;YAE9B,IAAG,OAAO,IAAE,GAAG,EAAC;gBACd,IAAI,CAAC,cAAc,IAAE,MAAM,CAAC,SAAS,CAAC;gBACtC,IAAI,CAAC,cAAc,IAAE,MAAM,CAAC,SAAS,CAAC;gBACtC,IAAI,CAAC,WAAW,IAAE,MAAM,CAAC,MAAM,CAAC;gBAChC,IAAI,CAAC,UAAU,IAAE,MAAM,CAAC,KAAK,CAAC;aAC/B;QAIH,CAAC,CAAC;IACJ,CAAC;;sGA5DU,2BAA2B;2GAA3B,2BAA2B;;QCVxC,yEACI;QAAA,wEAAsB;QAAA,+FAAoC;QAAA,4DAAK;QAEnE,gEACA;QAAA,yEACA;QAAA,yEACI;QAAA,2EAAe;QAAA,yEAAc;QAAA,4DAAQ;QACrC,+EACC;QADkD,iSAAU,2BAAyB,IAAC;QACtF,+HAAsD;QAEvD,4DAAS;QAIb,4DAAM;QACN,4DAAM;QAEN,mFAKqB;QASrB,4DAAM;;QAvBuB,2DAA6B;QAA7B,kFAA6B;QASvC,0DAAiC;QAAjC,8FAAiC;;6FDPvC,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,gBAAgB,CAAC;KAC1B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,qEAAI;QAAA,wEAAyB;QAAA,4DAAK;QAClC,2EAA+B;;6FDMlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACwB;AACN;AAC4C;AACvD;AACoC;AAC/B;;AAkBpD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,wEAAkB;SACnB;mIAIU,SAAS,mBAflB,2DAAY;QACZ,mFAAe;QACf,6EAAa;QACb,yHAA2B;QAC3B,uGAAqB,aAGrB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,wEAAkB;6FAKT,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,mFAAe;oBACf,6EAAa;oBACb,yHAA2B;oBAC3B,uGAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,wEAAkB;iBACnB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAkD;;;;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,uEAAiC;QAAA,0EAAe;QAAA,4DAAI;QACpD,4EACE;QAAA,qEAAyC;QAC3C,4DAAS;QACT,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,uEAAyC;QAAA,gEAAK;QAAA,2EAAsB;QAAA,qEAAS;QAAA,4DAAO;QAAA,4DAAI;QAC1F,4DAAK;QACL,yEACE;QAAA,wEAAiD;QAAA,qEAAS;QAAA,4DAAI;QAChE,4DAAK;QAEP,4DAAK;QACP,4DAAM;QACR,4DAAM;;QARsB,0DAAoB;QAApB,6IAAoB;QAGpB,0DAA4B;QAA5B,6IAA4B;;6FDJ7C,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEN;;;AAK9B,MAAM,kBAAkB;IAS7B,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAJ3B,QAAG,GAAC,kHAAkH,CAAC;QACvH,kBAAa,GAAC,gIAAgI,CAAC;QACvJ,uBAAuB;QACf,oBAAe,GAAC,wJAAwJ;QAG9K,IAAI,IAAI,GAAC,IAAI,IAAI,EAAE,CAAC;QACrB,IAAI,SAAS,GAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,gCAAgC;QAChC,gCAAgC;QAEhC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAC1C,kCAAkC;QAEjC,IAAI,CAAC,GAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,GAAC,SAAS,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC;QAI7B,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QACnB,IAAG,CAAC,CAAC,MAAM,GAAC,CAAC,EAAC;YACZ,CAAC,GAAC,GAAG,GAAC,CAAC,CAAC;SACT;QAGA,IAAI,CAAC,IAAI,GAAC,CAAC,GAAC,GAAG,GAAC,CAAC,GAAC,GAAG,GAAC,SAAS,CAAC,WAAW,EAAE,GAAC,MAAM;QAEpD,IAAI,CAAC,GAAG,IAAE,IAAI,CAAC,IAAI;QACnB,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,GAAG;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;IAEhC,CAAC;IAEF,eAAe;QAGd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC,IAAI,CACtE,0DAAG,CAAC,MAAM,GAAE;YAEX,IAAI,IAAI,GAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,MAAM,GAAC,IAAI,CAAC,CAAC,CAAC;YAClB,IAAI,KAAK,GAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC;YAEhB,OAAO,MAAM,CAAC;QAEf,CAAC,CAAC,CAIA;IACF,CAAC;IAEA,aAAa;QAEb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC,IAAI,CACjE,0DAAG,CAAC,MAAM,GAAE;YACX,IAAI,IAAI,GAAqB,EAAE,CAAC;YAEhC,IAAI,GAAG,GAAC,IAAI,GAAG,EAAE,CAAC;YAElB,wBAAwB;YAExB,IAAI,IAAI,GAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC;YAChB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAEnB,IAAI,IAAI,GAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC;gBAE7B,IAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC;oBAEnB,IAAI,KAAK,GAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;oBACtD,IAAI,IAAI,GAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;oBACjD,IAAI,IAAI,GAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;oBACrD,IAAI,IAAI,GAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;oBAElD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;wBACf,OAAO,EAAC,IAAI,CAAC,CAAC,CAAC;wBACf,SAAS,EAAC,KAAK;wBACf,KAAK,EAAC,IAAI;wBACV,SAAS,EAAC,IAAI;wBACd,MAAM,EAAC,IAAI;qBAGX,CAAC;iBAGH;qBACG;oBAEH,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;wBACb,OAAO,EAAC,IAAI,CAAC,CAAC,CAAC;wBACf,SAAS,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBAClB,KAAK,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACd,SAAS,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBAClB,MAAM,EAAC,CAAC,IAAI,CAAC,EAAE,CAAC;qBAClB,CAAC;iBAEF;YAKD,CAAC,CAAC,CAAC;YAEH,OAAO,GAAG,CAAC;QACX,CAAC,CAAC,CAAC;IAEL,CAAC;;oFApHS,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAyD;;AAOlD,MAAM,qBAAqB;IAchC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FAjBU,qBAAqB;qGAArB,qBAAqB;QCPlC,yEAEI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEACF;QAAA,4DAAM;QACR,yEACE;QAAA,uDACF;QAAA,4DAAM;QAER,4DAAM;QACZ,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,uEACF;QAAA,4DAAM;QACR,0EACE;QAAA,wDACF;QAAA,4DAAM;QAER,4DAAM;QACZ,4DAAM;QACN,0EACI;QAAA,0EAEI;QAAA,0EACE;QAAA,mEACF;QAAA,4DAAM;QACN,0EACI;QAAA,wDACF;QAAA,4DAAM;QACV,4DAAM;QAER,4DAAM;QACV,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,oEACF;QAAA,4DAAM;QACR,0EACE;QAAA,wDACF;QAAA,4DAAM;QAER,4DAAM;QACZ,4DAAM;QACV,4DAAM;;QAvCQ,0DACF;QADE,8FACF;QAUE,0DACF;QADE,8FACF;QAWI,0DACF;QADE,0FACF;QAUA,0DACF;QADE,2FACF;;6FDpCC,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;sCAKD,cAAc;kBADb,mDAAK;mBAAC,gBAAgB;YAGvB,UAAU;kBADT,mDAAK;mBAAC,YAAY;YAGnB,WAAW;kBADV,mDAAK;mBAAC,aAAa;YAGpB,cAAc;kBADb,mDAAK;mBAAC,gBAAgB;;;;;;;;;;;;;;AEhBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACU;AACyC;;;AAC1G,MAAM,MAAM,GAAW;IAErB;QACE,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,6EAAa;KAChC;IACD;QACE,IAAI,EAAC,WAAW,EAAC,SAAS,EAAC,yHAA2B;KACvD;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport {GlobalDataSummary} from 'src/app/models/global-data'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  totalConfirmed=0;\n  totalActive=0;\n  totalDeath=0;\n  totalRecovered=0;\n  globaldata:Map<string,GlobalDataSummary>\n  datatable=[]\n  chart={\n  PieChart:\"PieChart\",\n  ColumnChart:\"ColumnChart\",\n  height:500,\n  options:{\n    animation:{\n      duration:1000,\n      easing:'out'\n    }\n  }\n\n  }\n \n  temp:GlobalDataSummary\n  constructor(private dataService:DataServiceService) { }\n \n  initChart(casetype:string){\n    \n    this.datatable=[]\n   // this.datatable.push([\"Country\",\"Cases\"])\n   \n    this.globaldata.forEach((values,keys)=>{\n      let value:number;\n      if(casetype=='a')\n      if(values.active>2000)\n      {\n        value=values.active\n      }\n      if(casetype=='c')\n      if(values.confirmed>2000)\n      {\n       // console.log(\"confirmed\")\n        value=values.confirmed\n      }\n      if(casetype=='r')\n      // if(values.recovered>2000)\n      // {\n       // console.log(\"recovered\")\n        value=values.recovered\n      // }\n      if(casetype=='d')\n      if(values.death>2000)\n      {\n        value=values.death\n      }\n\n      //console.log(value)\n     this.datatable.push([values.country,value])\n    })\n\n  \n    \n      \n    \n  }\n\n  ngOnInit(): void {\n\n    this.dataService.getGlobalData().subscribe(\n      {\n        next:(result)=>{\n        \n          this.globaldata=result\n        \n         result.forEach((values,keys)=>{\n         \n          this.temp=values;\n          if(!Number.isNaN(this.temp.active)){\n          this.totalActive+=this.temp.active\n          this.totalDeath+=this.temp.death\n          this.totalRecovered+=this.temp.recovered\n          this.totalConfirmed+=this.temp.confirmed   \n          }\n         })\n          this.initChart('a');\n      \n\n\n        }\n      }\n    )\n\n    \n  }\n\n  updateChart(casetype:string){\n   console.log(casetype)\n   this.initChart(casetype);\n\n  }\n\n}\n","<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker</h1>\n    \n    <app-dashbord-card [totalConfirmed]='totalConfirmed'\n    [totalActive]='totalActive'\n    [totalDeath]='totalDeath'\n    [totalRecovered]='totalRecovered'\n    \n    ></app-dashbord-card>\n</div>\n<hr>\n<div class=\"ui form\">\n    <div class=\"inline fields\">\n      <label for=\"fruit\">Select Case Type:</label>\n      <div class=\"field\">\n        <div class=\"ui radio checkbox\">\n          <input type=\"radio\" value=\"c\" id='c' #c (click)='updateChart(c.value)' name=\"casetype\" checked=\"\" tabindex=\"0\" class=\"hidden\">\n          <label for='c'>Confirmed</label>\n        </div>\n      </div> \n      <div class=\"field\">\n        <div class=\"ui radio checkbox\">\n          <input type=\"radio\" id='d' value=\"d\"  #d (click)='updateChart(d.value)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n          <label for='d'>Deaths</label>\n        </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"ui radio checkbox\">\n          <input type=\"radio\" value=\"r\" id='r' #r (click)='updateChart(r.value)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n          <label for='r'>Recovered</label>\n        </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"ui radio checkbox\">\n          <input type=\"radio\" value=\"a\" id='a' #a (click)='updateChart(a.value)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n          <label for='a'>Active</label>\n        </div>\n      </div>\n    </div>\n   \n<div class=\"row\">\n    <div class=\"col \">\n        <google-chart [type]=\"chart.ColumnChart\" [data]='datatable'></google-chart>\n        </div>\n<div class=\"col \">\n\n    <google-chart [type]=\"chart.PieChart\" [data]='datatable'></google-chart>\n</div>\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { DataServiceService } from 'src/app/services/data-service.service';\n\n\n@Component({\n  selector: 'app-countries-component',\n  templateUrl: './countries-component.component.html',\n  styleUrls: ['./countries-component.component.css']\n})\nexport class CountriesComponentComponent implements OnInit {\n\n  constructor(private service:DataServiceService) { }\ncountries:string[]=[]; \ndata:string;\ntotalConfirmed=0;\ntotalActive=0;\ntotalDeath=0;\ntotalRecovered=0;\n\ntemp:Map<string,GlobalDataSummary>;\n  ngOnInit(): void {\n\n   this.service.getDateWiseData().subscribe(\n    result=>{\n      // console.log(result);\n\n    }\n\n   )\n\n\n    this.service.getGlobalData().subscribe(\n      \n      result=>{\n         \n       this.temp=result;\n        result.forEach((values,keys)=>{\n         \n          this.countries.push(keys);\n          this.totalConfirmed=this.temp.get('Afghanistan').confirmed;\n          this.totalActive=this.temp.get('Afghanistan').active;\n          this.totalDeath=this.temp.get('Afghanistan').death;\n          this.totalRecovered=this.temp.get('Afghanistan').recovered;\n\n\n        })\n      }\n\n\n\n\n     \n    )\n   // console.log(this.countries);\n  }\n\n  updateValues(country:string){\n    this.temp.forEach((values,key)=>{\n      \n      if(country==key){\n        this.totalConfirmed+=values.confirmed;\n        this.totalRecovered+=values.recovered;\n        this.totalActive+=values.active;\n        this.totalDeath+=values.death;\n      }\n      \n\n\n    })\n  }\n\n}\n","<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker Country Wise</h1>\n \n<hr>\n<div class=\"mx-auto\">\n<div class =\"form-group col-lg-5 mx-auto\">\n    <label for=\"c\">Select Country</label>\n    <select name=\"\" class=\"from-control\" id=\"c\" #input (change)='updateValues(input.value)'>\n     <option value=\"{{con}}\" *ngFor='let con of countries'>{{con}}</option>\n\n    </select>\n\n\n\n</div>\n</div>\n\n<app-dashbord-card [totalConfirmed]='totalConfirmed'\n[totalActive]='totalActive'\n[totalDeath]='totalDeath'\n[totalRecovered]='totalRecovered'\n\n></app-dashbord-card>\n\n<!-- <app-dashbord-card [totalConfirmed]='totalConfirmed'\n[totalActive]='totalActive'\n[totalDeath]='totalDeath'\n[totalRecovered]='totalRecovered'\n\n></app-dashbord-card> -->\n\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Covid19Tracker';\n}\n","<h1><app-navbar></app-navbar></h1>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponentComponent } from './components/countries-component/countries-component.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { DashbordCardComponent } from './components/dashbord-card/dashbord-card.component'\nimport { GoogleChartsModule } from 'angular-google-charts';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponentComponent,\n    DashbordCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">Covid19-Tracker</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" [routerLink]=\"['/']\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['countries']\">Countries</a>\n        </li>\n        \n      </ul>\n    </div>\n  </nav> ","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { map } from 'rxjs/operators';\nimport { GlobalDataSummary } from '../models/global-data';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n\n  \n  public temp;\n  private url=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/\";\n  private GlobaldataUrl=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/11-06-2020.csv\";\n  //private GlobaldataUrl\n  private DatewisedataUrl=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\"\n  constructor(private http:HttpClient) {\n  \n    let date=new Date();\n   let yesterday=new Date(date);\n  //  let d=this.date.getDate()-1;\n  //  let m=this.date.getMonth()+1\n\n  yesterday.setDate(yesterday.getDate() - 1)\n  //console.log(yesterday.getDate())\n   \n   let a=yesterday.getDate();\n   let m=yesterday.getMonth()+1;\n\n   \n\n   var n=a.toString();\n   if(n.length<2){\n     n=\"0\"+n;\n   }\n\n  \n    this.temp=m+\"-\"+n+\"-\"+yesterday.getFullYear()+\".csv\"\n    \n    this.url+=this.temp\n    this.GlobaldataUrl=this.url\n    console.log(this.GlobaldataUrl)\n\n   }\n  \n  getDateWiseData()\n  {\n  \n   return this.http.get(this.DatewisedataUrl,{responseType:'text'}).pipe(\n  map(result=>{\n\n   let rows=result.split('\\n');\n   console.log(rows);\n   let header=rows[0]\n   let dates=header.split(/,(?=\\S)/)\n   console.log(dates)\n   dates.splice(0,4)\n   rows.splice(0,1)\n\n   return result;\n\n  })\n    \n\n\n   )\n  }\n\n   getGlobalData() \n   {\n   return this.http.get(this.GlobaldataUrl,{responseType:'text'}).pipe(\n     map(result=>{\n      let data:GlobalDataSummary[]=[];\n      \n      var map=new Map();\n\n      //console.log(this.date)\n\n      let rows=result.split('\\n')\n     rows.splice(0,1) \n     rows.forEach(row => {\n     \n     let cols=row.split(/,(?=\\S)/)\n\n     if(map.has(cols[3])){\n\n      let cnfrm=parseInt(cols[7])+map.get(cols[3]).confirmed\n      let deth=parseInt(cols[8])+map.get(cols[3]).death\n      let reco=parseInt(cols[9])+map.get(cols[3]).recovered\n      let acti=parseInt(cols[10])+map.get(cols[3]).active\n      \n       map.set(cols[3],{\n        country:cols[3],\n        confirmed:cnfrm,\n        death:deth,\n        recovered:reco,\n        active:acti\n\n\n       })\n     \n\n     } \n     else{\n       \n      map.set(cols[3],{\n         country:cols[3],\n         confirmed:+cols[7],\n         death:+cols[8],\n         recovered:+cols[9],\n         active:+cols[10]\n      })\n\n     } \n\n    \n      \n       \n     });\n     \n     return map;\n     }))\n   \n   }\n\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashbord-card',\n  templateUrl: './dashbord-card.component.html',\n  styleUrls: ['./dashbord-card.component.css']\n})\nexport class DashbordCardComponent implements OnInit {\n  \n\n@Input('totalConfirmed')\ntotalConfirmed;\n@Input('totalDeath')\ntotalDeath;\n@Input('totalActive')\ntotalActive;\n@Input('totalRecovered')\ntotalRecovered;\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                Confirmed\n              </div>\n            <div class=\"value\">\n              {{totalConfirmed}}\n            </div>\n           \n          </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                Recovered\n              </div>\n            <div class=\"value\">\n              {{totalRecovered}}\n            </div>\n           \n          </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            \n            <div class=\"label\">\n              Death\n            </div>\n            <div class=\"value\">\n                {{totalDeath}}\n              </div> \n          </div>\n\n        </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                Active\n              </div>\n            <div class=\"value\">\n              {{totalActive}}\n            </div>\n           \n          </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport {CountriesComponentComponent} from './components/countries-component/countries-component.component'\nconst routes: Routes = [\n\n  {\n    path:'',component:HomeComponent\n  },\n  {\n    path:'countries',component:CountriesComponentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}